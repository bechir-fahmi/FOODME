// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Platform.NotificationSystems.EntityFramework;

#nullable disable

namespace Platform.NotificationSystems.EntityFramework.Migrations
{
    [DbContext(typeof(NotificationSystemsContext))]
    [Migration("20230404094749_update_SMSProvider_table")]
    partial class updateSMSProvidertable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Platform.NotificationSystems.DataModel.SMS.SMSProviderEndPointEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int>("HttpMethod")
                        .HasColumnType("integer");

                    b.Property<string>("UrlTemplate")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SMSProviderEndPoint");
                });

            modelBuilder.Entity("Platform.NotificationSystems.DataModel.SMS.SMSProviderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("AppKey")
                        .HasColumnType("text");

                    b.Property<string>("AppSecret")
                        .HasColumnType("text");

                    b.Property<int>("EndpointId")
                        .HasColumnType("integer");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EndpointId");

                    b.ToTable("SMSProvider");
                });

            modelBuilder.Entity("Platform.NotificationSystems.DataModel.SMS.SMSProviderEntity", b =>
                {
                    b.HasOne("Platform.NotificationSystems.DataModel.SMS.SMSProviderEndPointEntity", "Endpoint")
                        .WithMany()
                        .HasForeignKey("EndpointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");
                });
#pragma warning restore 612, 618
        }
    }
}
